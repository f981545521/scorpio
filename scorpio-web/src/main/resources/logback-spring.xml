<?xml version="1.0" encoding="UTF-8"?>
<!--    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
　　　　scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
　　　　debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <contextName>iblog-data</contextName>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- 控制台打印日志的相关配置 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志格式 -->
        <encoder>
            <!--<pattern>%black(console-) %red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger{10}) - %cyan(%msg%n)</pattern>-->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
        <!-- 日志级别过滤器 -->
        <!-- 临界值过滤器，过滤掉低于指定临界值的日志。当日志级别等于或高于临界值时，过滤器返回NEUTRAL；
        当日志级别低于临界值时，日志会被拒绝。
        例如：过滤掉所有低于INFO级别的日志。 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 过滤的级别 -->
            <level>debug</level>
            <!--   使用LevelFilter： ch.qos.logback.classic.filter.LevelFilter -->
            <!-- 匹配时的操作：接收（记录） -->
            <!--            <onMatch>ACCEPT</onMatch>-->
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <!--            <onMismatch>DENY</onMismatch>-->
        </filter>
    </appender>

    <!-- 生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>./logs/iblog-web.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <FileNamePattern>./logs/iblog-web.%d{yyyy-MM-dd}.%i.log.gz
            </FileNamePattern>
            <!-- keep 30 days' worth of history -->
            <MaxHistory>30</MaxHistory>
            <!-- or whenever the file size reaches 10MB -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 过滤的级别 -->
            <level>error</level>
        </filter>
    </appender>

    <!-- 匹配不上的，会走根日志，符合条件的转发到对应的appender -->
    <root level="debug">
        <appender-ref ref="CONSOLE"/>
    </root>
    <!-- 配置框架的过滤级别 -->
    <logger name="springfox" level="INFO"/>
    <logger name="io.lettuce.core.protocol" level="INFO"/>
    <logger name="com.zaxxer.hikari" level="INFO"/>
    <logger name="org.springframework" level="INFO"/>
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
</configuration>